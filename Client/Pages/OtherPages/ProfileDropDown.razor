@using ClientLibrary.Helpers
@using BaseLibrary.DTOs
<div class="dropdown">
    <img src="@(ProfileImage == "" ? "../images/profile/defaultProfileImage.png" : ProfileImage)" width="30" height="40"
    <button type="button" class="btn btn-none dropdown-toggle border-0 dropdown-toggle-split" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        <span class="visually-hidden">Toggle Dropdown</span>
    </button>
    <ul class="dropdown-menu mt-2 border-0" aria-labelledby="dropdownMenuButton">
        <li>
            <div class="card">
                <div class="card-body">
                    <ul class="list-group">
                        <li class="list-group-item">
                            <a class="text-primary fw-bold float-start text-decoration-none" style="font-family:Tahoma;">
                                <i class="bi bi-person-gear"></i>
                                Profile
                            </a>
                        </li>
                    </ul>
                </div>

        <div class="card-footer">
            <button class="btn btn-danger btn-sm fw-bold w-100" @onclick="LogoutClicked">
                <i class="bi bi-box-arrow-left"></i>
                Logout
            </button>
        </div>
            </div>
        </li>
    </ul>
</div>

@code{
    public string ProfileImage {get; set;} = "";

    async Task LogoutClicked(){
        var logoutModel = new UserSession();
        var customAuthStateProvider = (CustomAuthenticationStateProvider)AuthStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState(logoutModel);
        NavManager.NavigateTo("identity/account/login", replace: true, forceLoad: true);
    }

}